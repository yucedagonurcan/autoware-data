<launch>

  <!-- setting of this launch file -->
  <arg name="car_detection" default="true" />
  <arg name="pedestrian_detection" default="false" />
  <arg name="is_use_gpu" default="true" />
  <arg name="is_register_lidar2camera_tf" default="true" />
  <arg name="is_publish_projection_matrix" default="true" />
  <arg name="is_publish_camera_info" default="true" />
  <arg name="camera_calib" default="$(env HOME)/shared_dir/autoware-data/BorregasAve/data/calibration/camera_lidar_3d/prius/camera_lidar_sim_sf.yaml"/>

  <!-- calibration_publisher -->
  <include file="$(find runtime_manager)/launch_files/calibration_publisher.launch">
    <arg name="file" value="$(arg camera_calib)" />
    <arg name="register_lidar2camera_tf" value="$(arg is_register_lidar2camera_tf)" />
    <arg name="publish_extrinsic_mat" value="$(arg is_publish_projection_matrix)" />
    <arg name="publish_camera_info" value="$(arg is_publish_camera_info)" />
  </include>

  <!-- points2image -->
  <node pkg="points2image" type="points2image" name="points2image" />

  <!-- ssd -->
  <!-- /home/aw2/autoware.ai/install/vision_darknet_detect/share/vision_darknet_detect/launch/vision_yolo3_detect.launch -->
  <include file="$(find vision_darknet_detect)/launch/vision_yolo3_detect.launch">
    <!-- <arg name="use_gpu" value="$(arg is_use_gpu)" /> -->
    <arg name="score_threshold" default="0.8" />
    <arg name="network_definition_file" default="$(find vision_darknet_detect)/darknet/cfg/yolov3.cfg" />
    <arg name="pretrained_model_file" default="$(find vision_darknet_detect)/darknet/data/yolov3.weights" />
  </include>

  <!-- range_fusion -->
  <include file="$(find range_vision_fusion)/launch/range_vision_fusion.launch">
    <!-- <arg name="car" value="$(arg car_detection)" />
    <arg name="pedestrian" value="$(arg pedestrian_detection)" /> -->
  </include>

  <!-- Obsoluted -->
        <!-- dummy_track -->
        <!-- <include file="$(find vision_dummy_track)/launch/vision_dummy_track.launch">
          <arg name="car" value="$(arg car_detection)" />
          <arg name="pedestrian" value="$(arg pedestrian_detection)" />
        </include> -->
  <!-- Obsoluted -->


  <!-- Obsoluted -->
    <!-- obj_reproj -->
     <!-- <include file="$(find obj_reproj)/launch/obj_reproj.launch">
        <arg name="car" value="$(arg car_detection)" />
        <arg name="pedestrian" value="$(arg pedestrian_detection)" />
      </include> -->
  <!-- Obsoluted -->

  <!-- euclidean_cluster -->
  <include file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="cluster_size_min" value="5" />
  </include>

  <!-- Obsoluted -->
        <!-- obj_fusion
        <include file="$(find obj_fusion)/launch/obj_fusion.launch">
          <arg name="car" value="$(arg car_detection)" />
          <arg name="pedestrian" value="$(arg pedestrian_detection)" />
        </include> -->
  <!-- Obsoluted -->



  <!-- traffic light recognition -->
  <!-- feat_proj -->
  <include file="$(find trafficlight_recognizer)/launch/feat_proj.launch" />
 

  <!-- region_tlr -->
  <include file="$(find trafficlight_recognizer)/launch/traffic_light_recognition.launch">
    <arg name="light_src" value="/traffic_signal_info" />
  </include>

</launch>